README к системе clip

Ачозачем?
А вот, очень няшная штука, которая делает ваш буфер обмена фактически неуязвимым от внезапных и невнезапных пикоффов, ребутов, выпадений аккума и тому подобного.
Придумано было после того, как задолбало терять важные ссылки и копипасты из буфера.

Запиливание в симак:
1) убеждаемся, что в руках у нас SGold;
2) кидаем saclip.elf в корень диска 1:/ (берем в подкаталоге ./elf/ архива);
3) ставим патч clip.vkp для вашей модели и прошивки (берем в подкатологе ./patches/ архива);
4) кидаем loclip.elf в автозапуск (демоны, стартер, etc.) (берем в подкаталоге ./elf/ архива);
5) радостно тестим, убеждаясь, что все работает.

А теперь факультатив. Как работает и как было реализовано.

Принцип работы сморожен на sg@сами-знаете-где:
1) когда мы копируем что-то в буфер обмена, запускается функция, которая это делает;
2) врезка внутри этой функции перекидывается на тело патча, которое доделывает недоделанное и запускает saclip.elf;
3) saclip.elf сохраняет все необходимые структуры в три файла на диске 1 (см. описание архива). Потрете эти файлы - буфер потерян! Хотя радуйтесь, что пик при включении не огребете.
4) при следующем копирование повторяются пп. 1-3;
5) при включении запускается loclip.elf, который выгребает все содержимое из трех файлов и отправляет их в буфер обмена.
Авторство: green - нашел функции, сделал патч-врезку для запуска saclip.elf, kostett - написал loclip.elf и saclip.elf, напортировал функции и патчи по всем сг.
Отдельный респект Dimadze за растолкование основ работы с файлами.

Найденные green'ом функции:
1) 0x300: __thumb WSHDR * GetClipBoard(void) - возвращает адрес буфера обмена
2) 0x301: __thumb int CopyTextToClipboard(WSHDR * src, int pos, int len) - копирует в буфер обмена строку src с позиции pos длиной len, возвращает 0, если копирование не удалось

Ячейки 0x300, 0x301 и 0x302 забиты на сипатче и ниипет
0x302 под функцию очистки буфера обмена, но пока что смысл применения не найден)

Паттерны функций:
1) 80 BD 01 48 00 68 70 47 +3             //там тумба
2) B5 16 4D 06 1C 28 68 0F 1C 14 1C 00 28      //и тут тумба

Ну и адреса, нашел на фуллах, кои были в наличии:

SL65v53
1) 0xA1176183
2) 0xA117612D

CX70v56
1) 0xA0CF0FC3
2) 0xA0CF0F6D

S65v58
1) 0xA11811EB
2) 0xA1181195

C75v22
1) 0xA084EB67
2) 0xA084EB11

C75v24
1) 0xA084ED47
2) 0xA084ECF1

CX75v25
1) 0xA08AA8F3
2) 0xA08AA89D

CF75v23
1) 0xA0857D3F
2) 0xA0857CE9

на нсг+ на первый паттерн по три адреса, на второй вообще нифига нету О_о ну да ладно, пущай будет сг-онли, гг
если хотите и для нсг/елок - ищите сами, ребята.