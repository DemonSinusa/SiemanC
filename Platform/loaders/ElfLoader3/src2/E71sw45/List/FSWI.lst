###############################################################################
#                                                                             #
#     IAR Systems ARM Assembler V4.42A/W32 02/Oct/2016  22:27:15              #
#     Copyright 1999-2007 IAR Systems. All rights reserved.                   #
#                                                                             #
#           Source file   =  H:\aveman\SiemanC-git\Platform\loaders\ElfLoader3\src2\FSWI.asm#
#           List file     =  H:\aveman\SiemanC-git\Platform\loaders\ElfLoader3\src2\E71sw45\List\FSWI.lst#
#           Object file   =  H:\aveman\SiemanC-git\Platform\loaders\ElfLoader3\src2\E71sw45\Obj\FSWI.r79#
#           Command line  =  H:\aveman\SiemanC-git\Platform\loaders\ElfLoader3\src2\FSWI.asm #
#                            -OH:\aveman\SiemanC-git\Platform\loaders\ElfLoader3\src2\E71sw45\Obj\ #
#                            -s+ -M<> -w+ -DNEWSGOLD -DELKA                   #
#                            -LH:\aveman\SiemanC-git\Platform\loaders\ElfLoader3\src2\E71sw45\List\ #
#                            -cE -t8 --cpu ARM926EJ-S --fpu None              #
#                            -IH:\aveman\IAR\ARM\INC\                         #
#                                                                             #
###############################################################################

    1    00000000              ;SWI dispatcher v1.1 (C)2006 by Rst7/CBSIE
    2    00000000              ;
    3    00000000              
    4    00000000                      EXTERN  SWILIB
    5    00000000                      EXTERN  pLIB_TOP
    6    00000000                      EXTERN  FUNC_ABORT
    7    00000000                      RSEG    FSWI_PATCH1:CODE:ROOT
    8    00000000                      CODE32
    9    00000000              
   10    00000000 ........             LDR     PC, main_jumper
   11    00000004              
   12    00000004                      
   13    00000004                      #ifndef NEWSGOLD
   16    00000004                      #endif
   17    00000004              
   18    00000000                      RSEG    FSWI_PATCH2:DATA(2)
   19    00000000              
   20    00000000              main_jumper:
   21    00000000 ........             DC32    main
   22    00000004              
   23    00000000                      RSEG    CODE:CODE
   24    00000000                      CODE32
   25    00000000              nullsub:
   26    00000000 1EFF2FE1             BX      LR
   27    00000004              main:
   28    00000004 00109DE5             LDR     R1,[SP,#0]              ; Берем
                                                   CPSR
   29    00000008 200011E3             TST     R1, #0x20               ;
                                                    Проверяем на тумбу
   30    0000000C 192F8F02             ADREQ   R2,arm_jumper           ; Берем
                                                   адрес джампера
   31    00000010 0400000A             BEQ     arm_mode
   32    00000014 C70050E3             CMP     R0,#199                 ;
                                                   Служебный SWI для длинной
                                                   библиотеки
   33    00000018 B200DE00             LDREQH  R0,[LR],#2              ;
                                                   Зацепляем второе слово
                                                   (длинный номер) c пропуском
                                                   DW
   34    0000001C 14E08D05             STREQ   LR,[SP,#0x14]           ;
                                                   Сохраняем временно адрес
                                                   возврата (если захочем
                                                   данные)
   35    00000020 01E08EE2             ADD     LR,LR,#1                ;
                                                   Устанавливаем бит 0, если
                                                   тумба
   36    00000024 51208FE2             ADR     R2,thumb_jumper         ; Берем
                                                   адрес джампера
   37    00000028              arm_mode
   38    00000028 50109FE5             LDR     R1,=pLIB_TOP            ;
                                                   Указатель на таблицу
                                                   адресов
   39    0000002C 001091E5             LDR     R1,[R1]
   40    00000030 000051E3             CMP     R1,#0
   41    00000034 48109F05             LDREQ   R1,=Library
   42    00000038 803CC0E3             BIC     R3,R0,#0x8000
   43    0000003C 400D53E3             CMP     R3,#4096
   44    00000040 0900008A             BHI     exit
   45    00000044 800C10E3             TST     R0,#0x8000              ; А не
                                                   адрес нам надо получить?
   46    00000048 00402D09             STMEQFD SP!,{LR}                ;
                                                   Копируем адрес возврата из
                                                   LR_svc только если вызов
                                                   функции
   47    0000004C 0040FD08             LDMEQFD SP!,{LR}^               ; в
                                                   LR_usr, он будет использован
                                                   вызываемой функцией
   48    00000050 03C191E7             LDR     R12,[R1,R3,LSL#2]       ; Берем
                                                    адрес функции
   49    00000054 04C08D15             STRNE   R12,[SP,#4]             ; пишем
                                                    адрес в R0(стек)
   50    00000058 0300001A             BNE     exit
   51    0000005C 01007CE3             CMP     R12,#0xFFFFFFFF
   52    00000060 20209F05             LDREQ   R2,=FUNC_ABORT
   53    00000064 04008D05             STREQ   R0,[SP,#4]
   54    00000068 14208DE5             STR     R2,[SP,#0x14]           ; Пишем
                                                   адрес джампера для возврата
                                                   в стеке (PC)
   55    0000006C              exit:
   56    0000006C 0100BDE8             LDMFD   SP!,{R0}
   57    00000070 00F069E1             MSR     SPSR_cf,R0
   58    00000074 0F80FDE8             LDMFD   SP!,{R0-R3,PC}^
   59    00000078              arm_jumper:
   60    00000078 1CFF2FE1             BX      R12
   61    0000007C                      CODE16
   62    0000007C              thumb_jumper:
   63    0000007C 6047                 BX      R12
   64    0000007E 0000                 CODE32
   65    00000080              ;
   66    00000080              ; Собственно библиотека
   67    00000080              ;
   68    00000080                      RSEG    LIBR:DATA(2)
   68.1  00000080                       TABLE
   68.2  00000080 ........             Reference on line 38 
   68.3  00000084 ........             Reference on line 41 
   68.4  00000088 ........             Reference on line 52 
   68.5  00000000                      RSEG (including table)
   68    00000000                      RSEG    LIBR:DATA(2)
   69    00000000                      PUBLIC  Library
   70    00000000              Library:
   71    00000000              
   72    00000000                      END     ;main
##############################
#          CRC:C7D3          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 148         #
##############################



